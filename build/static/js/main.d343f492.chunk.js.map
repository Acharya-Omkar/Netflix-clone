{"version":3,"sources":["axios.js","request.js","Row.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","API_KEY","request","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","Banner","str","n","setMovie","requests","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d343f492.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n});\n\nexport default instance;","const API_KEY = \"4c560487184d2e57f8615aa1df926e80\";\n\nconst request = {\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n}\n\nexport default request;","import React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport \"./Row.css\";\nimport request from \"./request\";\nimport Youtube from \"react-youtube\";\nimport movieTrailer from \"movie-trailer\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1,\n    },\n  };\n\n  const handleClick = (movie) => {\n    if (trailerUrl) {\n      setTrailerUrl(\"\");\n    } else {\n      movieTrailer(movie?.name || \"\")\n        .then((url) => {\n          const urlParams = new URLSearchParams(new URL(url).search);\n          setTrailerUrl(urlParams.get(\"v\"));\n        })\n        .catch((error) => console.log(error));\n    }\n  };\n\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n      <div className=\"row__posters\">\n        {movies.map((movie) => (\n          <img\n            key={movie.id}\n            onClick={() => handleClick(movie)}\n            className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n            src={`${base_url}${\n              isLargeRow ? movie.poster_path : movie.backdrop_path\n            }`}\n            alt={movie.name}\n          />\n        ))}\n      </div>\n      {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />}\n    </div>\n  );\n}\n\nexport default Row;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport request from \"./request\";\nimport \"./Banner.css\";\n\nfunction Banner() {\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const requests = await axios.get(request.fetchNetflixOriginals);\n      setMovie(\n        requests.data.results[\n          Math.floor(Math.random() * requests.data.results.length - 1)\n        ]\n      );\n      return requests;\n    }\n    fetchData();\n  }, []);\n\n  console.log(movie);\n\n  function truncate(str, n) {\n      return str?.length > n ? str.substr(0, n-1) + \"...\" : str;\n  }\n\n\n  return (\n    <header\n      className=\"banner\"\n      style={{\n        backgroundSize: \"cover\",\n        backgroundImage: `url(\n            \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\n            )`,\n        backgroundPosition: \"center center\",\n      }}\n    >\n      <div className=\"banner__contents\">\n        <h1>{movie?.title || movie?.name || movie?.original_name}</h1>\n        <div className=\"banner__buttons\">\n          <button className=\"banner__button\">Play</button>\n          <button className=\"banner__button\">My List</button>\n        </div>\n        <h1 className=\"banner__description\">{truncate(movie?.overview, 150)}</h1>\n      </div>\n\n      <div className=\"banner--fadebottom\" />\n    </header>\n  );\n}\n\nexport default Banner;\n","import React, { useEffect, useState } from 'react';\nimport \"./Nav.css\";\n\nfunction Nav() {\n    const [show, handleShow] = useState(false);\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", () => {\n            if(window.scrollY > 100) {\n                handleShow(true);\n            } else handleShow(false);\n        });\n        return () => {\n            window.removeEventListener(\"scrollY\");\n        };\n    }, []);\n\n\n    return (\n        <div className={`nav ${show && \"nav__black\"}`}>\n            <img className=\"nav__logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" alt=\"Netflix logo\"></img>\n            <img className=\"nav__avatar\" src=\"avatar.png\" alt=\"Netflix logo\" />\n        </div>\n    )\n}\n\nexport default Nav\n ","import React from 'react';\nimport './App.css';\nimport Row from './Row';\nimport request from './request';\nimport Banner from './Banner';\nimport Nav from \"./Nav\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />\n     <Banner />\n      <Row title=\"NETFLIX ORIGINALS\" isLargeRow fetchUrl={request.fetchNetflixOriginals}/>\n      <Row title=\"Trending Now\" fetchUrl={request.fetchTrending}/>\n      <Row title=\"Top Rated\" fetchUrl={request.fetchTopRated}/>\n      <Row title=\"Action Movies\" fetchUrl={request.fetchActionMovies}/>\n      <Row title=\"Comedy Movies\" fetchUrl={request.fetchComedyMovies}/>\n      <Row title=\"Horror Movies\" fetchUrl={request.fetchHorrorMovies}/>\n      <Row title=\"Romance Movies\" fetchUrl={request.fetchRomanceMovies}/>\n      <Row title=\"Documentaries\" fetchUrl={request.fetchDocumentaries}/>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}